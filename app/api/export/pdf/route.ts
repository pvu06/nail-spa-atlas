import { NextRequest } from "next/server";
import { withAuth, AuthenticatedRequest } from "@/lib/middleware";
import { errorResponse } from "@/lib/api-response";
import { Competitor } from "@/lib/mockData";

export async function POST(request: NextRequest) {
  return withAuth(request, async (req: AuthenticatedRequest) => {
    try {
      const body = await req.json();
      const { competitors, searchAddress } = body as {
        competitors: Competitor[];
        searchAddress?: string;
      };

      if (!competitors || !Array.isArray(competitors)) {
        return errorResponse("Invalid competitors data", 400);
      }

      // Generate HTML for PDF (would use a library like puppeteer in production)
      const html = `
<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>Competitor Analysis Report</title>
  <style>
    body { font-family: Arial, sans-serif; margin: 40px; }
    h1 { color: #6b46c1; }
    .meta { color: #666; margin-bottom: 30px; }
    table { width: 100%; border-collapse: collapse; margin-top: 20px; }
    th, td { border: 1px solid #ddd; padding: 12px; text-align: left; }
    th { background-color: #6b46c1; color: white; }
    tr:nth-child(even) { background-color: #f9f9f9; }
    .footer { margin-top: 40px; color: #999; font-size: 12px; }
  </style>
</head>
<body>
  <h1>Competitor Analysis Report</h1>
  <div class="meta">
    ${searchAddress ? `<p><strong>Location:</strong> ${searchAddress}</p>` : ""}
    <p><strong>Date:</strong> ${new Date().toLocaleDateString()}</p>
    <p><strong>Total Competitors:</strong> ${competitors.length}</p>
  </div>
  
  <table>
    <thead>
      <tr>
        <th>Name</th>
        <th>Rating</th>
        <th>Reviews</th>
        <th>Price</th>
        <th>Gel</th>
        <th>Pedicure</th>
        <th>Acrylic</th>
        <th>Distance</th>
      </tr>
    </thead>
    <tbody>
      ${competitors
        .map(
          (c) => `
        <tr>
          <td>${c.name}</td>
          <td>${c.rating} ‚≠ê</td>
          <td>${c.reviewCount}</td>
          <td>${c.priceRange}</td>
          <td>$${c.samplePrices.gel}</td>
          <td>$${c.samplePrices.pedicure}</td>
          <td>$${c.samplePrices.acrylic}</td>
          <td>${c.distanceMiles} mi</td>
        </tr>
      `
        )
        .join("")}
    </tbody>
  </table>
  
  <div class="footer">
    <p>Generated by NailSpa Atlas - Competitor Analysis Tool</p>
    <p>https://nailspa-atlas.com</p>
  </div>
</body>
</html>
      `;

      // In production, you would use puppeteer to convert HTML to PDF
      // For now, return HTML (browser can print to PDF)
      return new Response(html, {
        status: 200,
        headers: {
          "Content-Type": "text/html",
          "Content-Disposition": `attachment; filename="competitors-${Date.now()}.html"`,
        },
      });
    } catch (error) {
      console.error("PDF export error:", error);
      return errorResponse(
        "Failed to export PDF",
        500,
        "INTERNAL_ERROR"
      );
    }
  });
}



